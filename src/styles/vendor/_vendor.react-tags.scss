/*------------------------------------*\
    #REACT TAGS
\*------------------------------------*/

$tweakpoint-react-tags:             medium;

$react-tags-spacing:                $spacing-unit-tiny + 2;





/**
 * 1. Bump up specificity to override `c-input` styles
 * 2. Clicking anywhere will focus the input
 * 3. Override `c-input` styles
 * 4. Parent context for the autocomplete dropdown
 */
.c-react-tags[class] { /* [1] */
    cursor: text; /* [2] */
    line-height: 1.2;
    padding-top: $react-tags-spacing;
    padding-bottom: 0; /* [3] */
    position: relative; /* [4] */

    &.is-focused[class] { /* [1] */
        background-color: lighten($input-background-color, 4%);
        border-color: rgba(color('brand-secondary'), .5);
        color: $global-text-color;
    }
}

    .c-react-tags__selected {
        display: inline;
    }

    /**
     * Selected tag
     */
    .c-react-tags__selected-tag {
        $background: darken($input-background-color, 7%);
        $color: $global-text-color;

        background-color: $background;
        border-radius: 2px;
        border: none;
        color: $color;
        display: inline-block;
        font-size: inherit;
        line-height: inherit;
        margin-bottom: $react-tags-spacing - 2;
        margin-right: $react-tags-spacing - 2;
        padding: ($react-tags-spacing - 2) $react-tags-spacing;
        transition: $global-transition;
        vertical-align: top;

        &::after {
            content: '\2715';
            color: rgba($color, .8);
            margin-left: $react-tags-spacing;
        }

        &:hover {
            cursor: pointer;
        }

        &:hover,
        &:focus {
            background-color: darken($background, 4%);
        }
    }

    /**
     * Faux search input
     *
     * 1. Match tag layout
     * 2. Prevent autoresize overflowing the container
     * 3. On larger screens this will become the offsetParent for suggestions
     *    dropdown.
     * 3. Remove styles and layout from this element
     */
    .c-react-tags__search {
        display: inline-block;
        margin-bottom: $react-tags-spacing; /* [1] */
        max-width: 100%; /* [2] */
        padding: 7px 2px; /* [1] */

        @include mq($tweakpoint-react-tags) {
            position: relative; /* [3] */
        }

        input {
            background-color: transparent; /* [4] */
            border: 0; /* [4] */
            color: $input-color;
            font-size: inherit;
            line-height: inherit;
            margin: 0; /* [4] */
            max-width: 100%; /* [2] */
            outline: none; /* [4] */
            padding: 0; /* [4] */
        }
    }

    .c-react-tags__suggestions {
        width: 100%;
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 900;

        @include mq($tweakpoint-react-tags) {
            width: 280px;
        }

        ul {
            margin: 4px -1px;
            padding: 0;
            list-style: none;
            background: white;
            border: 1px solid #D1D1D1;
            border-radius: 2px;
            box-shadow: 0 2px 6px rgba(#000, .2);
        }

        li {
            border-bottom: 1px solid #ddd;
            padding: $react-tags-spacing $react-tags-spacing;

            &:hover {
                cursor: pointer;
                background: #eee;
            }

            &.is-active {
                background: #b7cfe0;
            }

            &.is-disabled {
                opacity: .5;
                cursor: auto;
            }
        }

        mark {
            text-decoration: underline;
            background: none;
            font-weight: 600;
        }
    }
